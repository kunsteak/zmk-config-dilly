#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};
&sk {
     release-after-ms = <2000>;
     quick-release;
};
&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>;
};

/* Layers */
#define DEF 0
#define SYM 1
#define NAV 2	
#define BLT 3
/ { 
    combos {
        compatible = "zmk,combos";
        // 2 key combos
        combo_rpt     { timeout-ms = <175>; key-positions = <26 28>; bindings = <&key_repeat>; };
        combo_caps    { timeout-ms = <175>; key-positions = <4 5>; bindings = <&caps_word>; };
        combo_shft_l  { timeout-ms = <175>; key-positions = <13 14>; bindings = <&sk LSHFT>; };
        combo_shft_r  { timeout-ms = <175>; key-positions = <15 16>; bindings = <&sk LSHFT>; };
        combo_dot     { timeout-ms = <175>; key-positions = <16 17>; bindings = <&kp DOT>; layers = <SYM>; };
        combo_comma   { timeout-ms = <175>; key-positions = <17 18>; bindings = <&kp COMMA>; layers = <SYM>; };
        combo_numlock { timeout-ms = <175>; key-positions = <13 23>; bindings = <&kp KP_NUM>; layers = <NAV>; };
        combo_bspc_l  { timeout-ms = <175>; key-positions = <3 14>; bindings = <&kp BSPC>; };
        combo_bspc_r  { timeout-ms = <175>; key-positions = <6 15>; bindings = <&kp BSPC>; };
        combo_del_l   { timeout-ms = <175>; key-positions = <4 13>; bindings = <&kp DEL>; };
        combo_del_r   { timeout-ms = <175>; key-positions = <5 16>; bindings = <&kp DEL>; };
        combo_entr_l  { timeout-ms = <175>; key-positions = <22 23>; bindings = <&kp RETURN>; };
        combo_entr_r  { timeout-ms = <175>; key-positions = <26 27>; bindings = <&kp RETURN>; };
        combo_esc_l   { timeout-ms = <175>; key-positions = <3 13>; bindings = <&kp ESC>; };
        combo_esc_r   { timeout-ms = <175>; key-positions = <6 16>; bindings = <&kp ESC>; };
        // 3 key combos
        combo_NAV_l   { timeout-ms = <175>; key-positions = <1 2 3>; bindings = <&tog NAV>; };
        combo_NAV_r   { timeout-ms = <175>; key-positions = <6 7 8>; bindings = <&tog NAV>; };
        combo_tab_l   { timeout-ms = <175>; key-positions = <2 3 10>; bindings = <&kp TAB>; };
        combo_tab_r   { timeout-ms = <175>; key-positions = <6 7 19>; bindings = <&kp TAB>; };
    };

    behaviors {
        m_l: mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        m_r: mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        l_l: layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERS_L";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        l_r: layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <2000>;
            quick-release;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    //      00  01  02  03  04      05  06  07  08  09
    //      10  11  12  13  14      15  16  17  18  19
    //      20  21  22  23  24      25  26  27  28  29

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
            &kp Y  &m_l LCTL C  &m_l LALT L  &m_l LGUI M  &l_l BLT K            /**/  &l_r BLT Z  &m_r RGUI F  &m_r RALT U  &m_r RCTL COMMA  &td DQT SQT
            &kp I  &kp S        &kp R        &l_l NAV T   &kp G                 /**/  &kp P       &l_r NAV N   &kp E        &kp A            &kp O
            &kp Q  &kp V        &kp W        &kp D        &mt LC(LS(LALT)) SPC  /**/  &l_r SYM B  &kp H        &kp J        &td COLON DOT    &td SEMI X
            >;
        };

        sym {
            bindings = <
            &kp ESC    &m_l LCTL GRAVE  &m_l LALT LBKT  &m_l LGUI RBKT  &kp QMARK  /**/  &kp PLUS   &kp N1  &kp N2  &kp N3  &kp EQUAL
            &kp TAB    &kp TILDE        &kp LPAR        &kp RPAR        &kp UNDER  /**/  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp N0
            &kp LSHFT  &kp BSLH         &kp PIPE        &kp FSLH        &trans     /**/  &none      &kp N7  &kp N8  &kp N9  &kp FSLH
            >;
        };

        nav {
            bindings = <
            &kp ESC    &m_l LCTL LG(LBKT)  &m_l LALT LG(RBKT)  &td LG(X) LG(C)  &td LG(LA(V)) LG(V)  /**/  &kp PG_UP    &kp HOME  &kp UP     &kp END    &kp BSPC
            &kp TAB    &kp LG(LBRC)        &kp RG(RBRC)        &mkp LCLK        &mkp RCLK            /**/  &kp PG_DN    &kp LEFT  &kp DOWN   &kp RIGHT  &kp RET
            &kp LSHFT  &kp RC(RA(DOWN))    &kp RC(RA(UP))      &mkp MCLK        &trans               /**/  &key_repeat  &kp RGUI  &kp COMMA  &kp SEMI   &kp LC(LS(LALT))
            >;
        };

        ble {
            bindings = <
            &out OUT_BLE  &none  &none  &none        &none       /**/  &none       &none        &none  &none  &out OUT_BLE
            &none         &none  &none  &bootloader  &none       /**/  &none       &bootloader  &none  &none  &none
            &reset        &none  &none  &none        &bt BT_CLR  /**/  &bt BT_CLR  &none        &none  &none  &reset
            >;
        };

    };
};
